*** Settings ***
Test Setup      Create Base Test Directory
Suite Teardown  Remove Base Test Directory
Resource        os_resource.txt

*** Variables ***
${SOURCE}=    ${BASE}move_from${/}
${SOURCE2}=    ${BASE}move_from_dir1${/}
${SOURCE3}=    ${BASE}move_from_dir2${/}
${DEST}=    ${BASE}move_to${/}

*** Test Cases ***
Move File
    Create FIle  ${TESTFILE}  contents
    Move File  ${TESTFILE}  ${TESTFILE2}
    Should Not Exist  ${TESTFILE}
    Verify File  ${TESTFILE2}  contents

Copy File
    Create FIle  ${TESTFILE}  contents
    Copy File  ${TESTFILE}  ${TESTFILE2}
    Verify File  ${TESTFILE2}  contents
    Directory Should Have Items   ${BASE}    ${TESTFILE SHORT NAME}    ${TESTFILE 2 SHORT NAME}

Copy File when destination exists should be ok
    Create File  ${TESTFILE}  contents
    Copy File  ${TESTFILE}  ${TESTFILE2}
    Create File  ${TESTFILE}  contents2
    Copy File  ${TESTFILE}  ${TESTFILE2}
    Verify File  ${TESTFILE2}  contents2

Copy File when destination is a directory
    ${destination}=    Set Variable    ${BASE}/foo
    Create Directory   ${destination}
    Create File  ${TESTFILE}  contents
    Copy File    ${TESTFILE}  ${destination}
    Verify File  ${destination}${/}${TESTFILE SHORT NAME}   contents

Copy File when destination is a directory and file with same name exists
    ${destination}=    Set Variable    ${BASE}/foo
    Create Directory   ${destination}
    Create File  ${TESTFILE}  contents
    Create File  ${destination}${/}${TESTFILE SHORT NAME}   original
    Copy File    ${TESTFILE}  ${destination}
    Verify File  ${destination}${/}${TESTFILE SHORT NAME}   contents

Move File To Existing Dir
    Create Directory  ${BASE}/foo
    Create Directory  ${BASE}/bar
    Create File  ${BASE}/zap  contents
    Move File  ${BASE}/zap  ${BASE}${/}foo${/}file
    Should Not Exist  ${BASE}/zap
    Verify File  ${BASE}/foo/file  contents
    Move File  ${BASE}/foo${/}file  ${BASE}/bar
    Should Not Exist  ${BASE}/foo/bar
    Verify File  ${BASE}/bar/file  contents

Move File To Non-Existing Dir
    Directory Should Not Exist  ${BASE}/*
    Create File  ${TESTFILE}  contents
    Move File  ${TESTFILE}  ${BASE}${/}dir/new.file
    Should Not Exist  ${TESTFILE}
    Verify File  ${BASE}/dir/new.file  contents
    Move File  ${BASE}/dir/new.file  ${BASE}${/}dir2${/}
    Should Not Exist  ${BASE}/dir/new.file
    Verify File  ${BASE}/dir2/new.file  contents

Move File Using Just File Name
    Create File  rf_test.1  contents
    ${contents 1} =  Get File  rf_test.1
    Move File  rf_test.1  rf_test.2
    Should Not Exist  rf_test.1
    Should Exist  ${EXECDIR}/rf_test.2
    ${contents 2} =  Get File  rf_test.2
    Should Be Equal  -${contents 1}-${contents 2}-  -contents-contents-
    [Teardown]  Remove Files  rf_test.1  rf_test.2

Moving Non-Existing File Fails
    [Documentation]  FAIL REGEXP: Source file '${ANYDIR}non-existing-file.txt' does not exist
    Move File  non-existing-file.txt  whatever.txt

Move Directory
    Create File  ${BASE}/dir/f1      file1
    Create File  ${BASE}/dir/sub/f2  file2
    Move Directory  ${BASE}/dir  ${BASE}/dir2
    Should Not Exist  ${BASE}/dir
    Verify File  ${BASE}/dir2/f1      file1
    Verify File  ${BASE}/dir2/sub/f2  file2

Move Directory To Existing Dir
    Create File  ${BASE}/dir/f1      file1
    Create File  ${BASE}/dir/sub/f2  file2
    Create File  ${BASE}/dir2/f3     file3
    Create Directory  ${BASE}/dir2
    Move Directory  ${BASE}/dir  ${BASE}/dir2
    Should Not Exist  ${BASE}/dir
    Verify File  ${BASE}/dir2/dir/f1      file1
    Verify File  ${BASE}/dir2/dir/sub/f2  file2
    Verify File  ${BASE}/dir2/f3          file3

Move Directory To Non-Existing Dir Tree
    Create File  ${BASE}/dir/file  content
    Move Directory  ${BASE}${/}dir  ${BASE}/1/2/3/4/5
    Should Not Exist  ${BASE}/dir
    Verify File  ${BASE}/1/2/3/4/5/file  content

Move Directory Using Just Dir Name
    Create File  rf_test_1/file  contents
    ${contents 1} =  Get File  rf_test_1/file
    Move Directory  rf_test_1  rf_test_2
    Should Not Exist  rf_test_1
    Should Exist  ${EXECDIR}/rf_test_2
    ${contents 2} =  Get File  rf_test_2/file
    Should Be Equal  -${contents 1}-${contents 2}-  -contents-contents-
    [Teardown]  Remove Just Name Dirs

Moving Non-Existing Directory Fails
    [Documentation]  FAIL REGEXP: Source directory '${ANYDIR}non-existing-dir' does not exist
    Move Directory  non-existing-dir  whatever

# Test cases for Move Files keyword
Move One File With Move Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Move Files    ${DEST}    ${source}movecopy-*.txt
    Directory Should Have Items    ${DEST}
	...    movecopy-one.txt
	Remove Values From List    ${source_files}
	...    movecopy-one.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Move Multiple Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Move Files    ${DEST}    ${SOURCE}movecopy_multi-*.txt
    Directory Should Have Items    ${DEST}
	...    movecopy_multi-1.txt
	...    movecopy_multi-2.txt
	Remove Values From List    ${source_files}
	...    movecopy_multi-1.txt
	...    movecopy_multi-2.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Move Multiple Files From Multiple Directories
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Move Files    ${DEST}    ${BASE}*dir[12]${/}movecopy_multi_dir-*.txt
    Directory Should Have Items    ${DEST}
    ...    movecopy_multi_dir-1.txt
    ...    movecopy_multi_dir-2.txt
    ...    movecopy_multi_dir-3.txt
    ...    movecopy_multi_dir-4.txt
	Remove Values From List    ${source2_files}
    ...    movecopy_multi_dir-1.txt
    ...    movecopy_multi_dir-2.txt
	Remove Values From List    ${source3_files}
    ...    movecopy_multi_dir-3.txt
    ...    movecopy_multi_dir-4.txt
    Directory Should Have Items    ${SOURCE2}    @{source2_files}
    Directory Should Have Items    ${SOURCE3}    @{source3_files}

Move List of Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Move Files    ${DEST}    ${SOURCE}movecopy_list-1.txt    ${SOURCE}movecopy_list-2.txt
    Directory Should Have Items    ${DEST}
    ...    movecopy_list-1.txt
    ...    movecopy_list-2.txt
	Remove Values From List    ${source_files}
    ...    movecopy_list-1.txt
    ...    movecopy_list-2.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Move List of Files with Patterns
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Move Files    ${DEST}    ${SOURCE}movecopy_list-3.txt    ${SOURCE}movecopy_list-4.txt    ${SOURCE}movecopy_list_pattern-*.txt    ${SOURCE}movecopy_list_pattern2-*.txt
    Directory Should Have Items    ${DEST}
    ...    movecopy_list-3.txt
    ...    movecopy_list-4.txt
    ...    movecopy_list_pattern-1.txt
    ...    movecopy_list_pattern-2.txt
    ...    movecopy_list_pattern2-3.txt
    ...    movecopy_list_pattern2-4.txt
	Remove Values From List    ${source_files}
    ...    movecopy_list-3.txt
    ...    movecopy_list-4.txt
    ...    movecopy_list_pattern-1.txt
    ...    movecopy_list_pattern-2.txt
    ...    movecopy_list_pattern2-3.txt
    ...    movecopy_list_pattern2-4.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Moving Non-existing Files Fails
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Run Keyword And Expect Error    No existing source files*    Move Files    ${DEST}    ${SOURCE}non_existing.txt    ${SOURCE}non_existing_pattern*.txt
    Directory Should Be Empty    ${DEST}
	Directory Should Have Items    ${SOURCE}    @{source_files}

Rename One File With Move Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Move Files    ${SOURCE}renamed-one.txt    ${SOURCE}${/}rename-*.txt
	Remove Values From List    ${source_files}
	...    rename-one.txt
	Append To List    ${source_files}
    ...    renamed-one.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Rename Multiple Files To One File Fails
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
	Append To File    ${SOURCE}rename_multi-1.txt    one
	Append To File    ${SOURCE}rename_multi-2.txt    two
    Run Keyword And Expect Error    Several files match the pattern*    Move Files    ${SOURCE}rename_multi-renamed.txt    ${SOURCE}${/}rename_multi-[12].txt
    Directory Should Be Empty    ${DEST}
	Directory Should Have Items    ${SOURCE}    @{source_files}

Rename List of Files with Patterns To One File Fails
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Run Keyword And Expect Error    Several files match the pattern*    Move Files    ${SOURCE}renamed_list_pattern.txt    ${SOURCE}rename_list_pattern3-*.txt    ${SOURCE}rename_list_pattern4-?.txt
    Directory Should Be Empty    ${DEST}
	Directory Should Have Items    ${SOURCE}    @{source_files}

# Test cases for Copy Files keyword
Copy One File To Dir With Copy Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Copy Files    ${DEST}    ${SOURCE}movecopy-*.txt
    Directory Should Have Items    ${DEST}
	...    movecopy-one.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copy One File To File With Copy Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Copy Files    ${DEST}copied-movecopy.txt    ${SOURCE}movecopy-*.txt
    Directory Should Have Items    ${DEST}
	...    copied-movecopy.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copy Multiple Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Copy Files    ${DEST}    ${SOURCE}movecopy_multi-*.txt
    Directory Should Have Items    ${DEST}
	...    movecopy_multi-1.txt
	...    movecopy_multi-2.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copy Multiple Files To One File Fails
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Run Keyword And Expect Error    Several files match the pattern*    Copy Files    ${DEST}copied_multi.txt    ${SOURCE}${/}movecopy_multi-[12].txt
    Directory Should Be Empty    ${DEST}
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copy Multiple Files From Multiple Directories
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Copy Files    ${DEST}    ${BASE}*dir[12]${/}movecopy_multi_dir-*.txt
    Directory Should Have Items    ${DEST}
    ...    movecopy_multi_dir-1.txt
    ...    movecopy_multi_dir-2.txt
    ...    movecopy_multi_dir-3.txt
    ...    movecopy_multi_dir-4.txt
    Directory Should Have Items    ${SOURCE2}    @{source2_files}
    Directory Should Have Items    ${SOURCE3}    @{source3_files}

Copy List of Files
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Copy Files    ${DEST}    ${SOURCE}movecopy_list-1.txt    ${SOURCE}movecopy_list-2.txt
    Directory Should Have Items    ${DEST}
    ...    movecopy_list-1.txt
    ...    movecopy_list-2.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copy List of Files with Patterns
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Copy Files    ${DEST}    ${SOURCE}movecopy_list-3.txt    ${SOURCE}movecopy_list-4.txt    ${SOURCE}movecopy_list_pattern-*.txt    ${SOURCE}movecopy_list_pattern2-*.txt
    Directory Should Have Items    ${DEST}
    ...    movecopy_list-3.txt
    ...    movecopy_list-4.txt
    ...    movecopy_list_pattern-1.txt
    ...    movecopy_list_pattern-2.txt
    ...    movecopy_list_pattern2-3.txt
    ...    movecopy_list_pattern2-4.txt
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copy List of Files with Pattern To One File Fails
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Run Keyword And Expect Error    Several files match the pattern*    Copy Files    ${DEST}copied_list_pattern.txt    ${SOURCE}movecopy_list_pattern-*.txt    ${SOURCE}movecopy_list_pattern2-?.txt
    Directory Should Be Empty    ${DEST}
	Directory Should Have Items    ${SOURCE}    @{source_files}

Copying Non-existing Files Fails
    [Setup]    Create Test Files For Multifile Operations
    [Teardown]    Remove Test Files For Multifile Operations
    Run Keyword And Expect Error    No existing source files*    Copy Files    ${DEST}    ${SOURCE}non_existing.txt    ${SOURCE}non_existing_pattern*.txt
    Directory Should Be Empty    ${DEST}
	Directory Should Have Items    ${SOURCE}    @{source_files}

***Keywords***
Remove Just Name Dirs
    Remove Directory  rf_test_1  recursive
    Remove Directory  rf_test_2  recursive

Create Test Files For Multifile Operations
    Remove Test Files For Multifile Operations
    Create Directory    ${SOURCE}
    Create Directory    ${SOURCE2}
    Create Directory    ${SOURCE3}
    Create Directory    ${DEST}
    Set Test Variable    @{source_files}
    ...    movecopy-one.txt
    ...    movecopy_list-1.txt
    ...    movecopy_list-2.txt
    ...    movecopy_list-3.txt
    ...    movecopy_list-4.txt
    ...    movecopy_list_pattern-1.txt
    ...    movecopy_list_pattern-2.txt
    ...    movecopy_list_pattern2-3.txt
    ...    movecopy_list_pattern2-4.txt
    ...    movecopy_multi-1.txt
    ...    movecopy_multi-2.txt
    ...    rename-one.txt
    ...    rename_list_pattern3-5.txt
    ...    rename_list_pattern3-6.txt
    ...    rename_list_pattern4-7.txt
    ...    rename_list_pattern4-8.txt
    ...    rename_multi-1.txt
    ...    rename_multi-2.txt
    Set Test Variable    @{source2_files}
    ...    movecopy_multi_dir-1.txt
    ...    movecopy_multi_dir-2.txt
    Set Test Variable    @{source3_files}
    ...    movecopy_multi_dir-3.txt
    ...    movecopy_multi_dir-4.txt
    # All the files possibly used in the test are created
    :FOR    ${file}    IN    @{source_files}
    \    Create File    ${SOURCE}${file}
    :FOR    ${file}    IN    @{source2_files}
    \    Create File    ${SOURCE2}${file}
    :FOR    ${file}    IN    @{source3_files}
    \    Create File    ${SOURCE3}${file}

Remove Test Files For Multifile Operations
    Remove Directory    ${SOURCE}    recursive
    Remove Directory    ${SOURCE2}    recursive
    Remove Directory    ${SOURCE3}    recursive
    Remove Directory    ${DEST}    recursive
