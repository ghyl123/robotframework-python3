*** Settings ***
Test Setup      Create Base Test Directory
Suite Teardown  Remove Base Test Directory
Resource        os_resource.txt
Variables       files/result.py

*** Variables ***
${utf-8file}  ${CURDIR}${/}files${/}utf-8.txt
${asciifile}  ${CURDIR}${/}files${/}ascii.txt
${latin-1file}  ${CURDIR}${/}files${/}latin-1.txt
${utf-16 LE file}  ${CURDIR}${/}files${/}utf-16LE.txt                   # Little Endian
${utf-16 BE file}    ${CURDIR}${/}files${/}utf-16BE.txt                 # Big Endian
${utf-16 LE with BOM file}    ${CURDIR}${/}files${/}utf-16LEBOM.txt     # Little Endian with Byte Order Marker
${utf-16 BE with BOM file}    ${CURDIR}${/}files${/}utf-16BEBOM.txt     # Big Endian with BOM

*** Test Cases ***
Get File
    Create File  ${TESTFILE}  hello world\nwith two lines
    ${file} =  Get File  ${TESTFILE}
    Should Be Equal  ${file}  hello world\nwith two lines
    ${file} =  Get File  ${TESTFILE}  ascii
    Should Be Equal  ${file}  hello world\nwith two lines

Get File With Non-ASCII Name
    Create File  ${NON ASCII}  content
    ${file} =  Get File  ${NON ASCII}
    Should Be Equal  ${file}  content

Get File With Space In Name
    Create File  ${WITH SPACE}  content
    ${file} =  Get File  ${WITH SPACE}
    Should Be Equal  ${file}  content

Get Binary File
    Create File  ${TESTFILE}  hello world\r\nbinary
    ${file}=  Get Binary File  ${TESTFILE}
    Should Be Equal  ${file}  hello world\r\nbinary

Log File
    Create File  ${TESTFILE}  hello world\nwith two lines
    ${file} =  Log File  ${TESTFILE}
    Should Be Equal  ${file}  hello world\nwith two lines

Get Utf-8 File
    ${file} =  Get File  ${utf-8file}
    Log Variables
    Log  ${file}
    Should Be Equal  ${file}  ${RESULT}

Get Ascii File With Default Encoding
    ${file} =  Get File  ${asciifile}
    Should Be Equal  ${file}  Hyvaa yota

Get Latin-1 With Default Encoding
    [Documentation]  FAIL REGEXP: (UnicodeDecodeError|UnicodeError): .*
    ${file} =  Get File  ${latin-1file}

Get Latin-1 With Latin-1 Encoding
    ${file} =  Get File  ${latin-1file}  Latin-1
    Should Be Equal  ${file}  ${result}

Get Utf-16 File with Default Encoding
    [Documentation]    FAIL REGEXP: (UnicodeDecodeError|UnicodeError): .*
    ${file}=    Get File    ${utf-16LEfile}

Get Utf-16 File with UTF-16 Encoding
    [Template]     Verify UTF-16 File
    ${utf-16 LE file}   UTF-16-LE
    ${utf-16 BE file}    UTF-16-BE
    ${utf-16 LE with BOM file}    UTF-16
    ${utf-16 BE with BOM file}    UTF-16

Get Utf-16 File with Default Encoding and error handler 'ignore'
    [Template]    Verify UTF-16 File with error handler
    ${utf-16 LE file}            ignore    H\x00y\x00v\x00\x00\x00 \x00\x00\x00t\x00\x00
    ${utf-16 BE file}            ignore    \x00H\x00y\x00v\x00\x00\x00 \x00\x00\x00t\x00
    ${utf-16 LE with BOM file}   ignore    H\x00y\x00v\x00\x00\x00 \x00\x00\x00t\x00\x00
    ${utf-16 BE with BOM file}   ignore    \x00H\x00y\x00v\x00\x00\x00 \x00\x00\x00t\x00

Get Utf-16 File with Default Encoding and error handler 'replace'
    [Template]    Verify UTF-16 File with error handler
    ${utf-16 LE file}             replace    H\x00y\x00v\x00\ufffd\x00\ufffd\x00 \x00\ufffd\x00\ufffd\x00t\x00\ufffd\x00
    ${utf-16 BE file}             replace    \x00H\x00y\x00v\x00\ufffd\x00\ufffd\x00 \x00\ufffd\x00\ufffd\x00t\x00\ufffd
    ${utf-16 LE with BOM file}    replace    \ufffd\ufffdH\x00y\x00v\x00\ufffd\x00\ufffd\x00 \x00\ufffd\x00\ufffd\x00t\x00\ufffd\x00
    ${utf-16 BE with BOM file}    replace    \ufffd\ufffd\x00H\x00y\x00v\x00\ufffd\x00\ufffd\x00 \x00\ufffd\x00\ufffd\x00t\x00\ufffd

Log Latin-1 With Latin-1 Encoding
    ${file} =  Log File  ${latin-1file}  Latin-1

Grep File
    Create File  ${TESTFILE}  foo\nbar\nfoo bar\n\nA Foo
    Grep And Check File  ${EMPTY}  foo\nbar\nfoo bar\n\nA Foo
    Grep And Check File  foo  foo\nfoo bar
    Grep And Check File  foo?  foo bar
    Grep And Check File  ?foo  ${EMPTY}
    Grep And Check File  ?oo  foo\nfoo bar\nA Foo
    Grep And Check File  [Ff]oo  foo\nfoo bar\nA Foo
    Grep And Check File  f*a  foo bar
    Grep And Check File  ?  foo\nbar\nfoo bar\nA Foo
    Grep And Check File  ????  foo bar\nA Foo
    Grep And Check File  foo bar  foo bar
    Create File  ${TESTFILE}  ${EMPTY}
    Grep And Check File  *  ${EMPTY}

Grep File non Ascii
    Create File  ${TESTFILE}  fää\nbär\nföö bär\n\nA Fåå
    Grep And Check File     fää     fää
    Grep And Check File     ö       föö bär
    Grep And Check File     A       A Fåå

*** Keywords ***
Get And Check File
    [Arguments]  ${path}  ${expected}
    ${content} =  Get File  ${path}
    Should Be Equal  ${content}  ${expected}

Grep And Check File
    [Arguments]  ${pattern}  ${expected}
    ${content} =  Grep File  ${TESTFILE}  ${pattern}
    Should Be Equal  ${content}  ${expected}

Verify UTF-16 File
    [Arguments]    ${utf-16file}    ${encoding}
    ${file}=    Get File    ${utf-16file}    ${encoding}
    Should Be Equal    ${file}    Hyvää üötä

Verify UTF-16 File with error handler
    [Arguments]    ${utf-16 file}    ${error handler}    ${expected}
    ${file}=    Get File    ${utf-16 file}    encoding_errors=${error handler}
    Should Be Equal    ${file}    ${expected}
