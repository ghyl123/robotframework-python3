*** Settings ***
Test Setup      Create Base Test Directory
Suite Teardown  Remove Base Test Directory
Resource        os_resource.txt
Variables       files/result.py

*** Variables ***
${utf-8file}                  ${CURDIR}${/}files${/}utf-8.txt
${asciifile}                  ${CURDIR}${/}files${/}ascii.txt
${latin-1file}                ${CURDIR}${/}files${/}latin-1.txt
${latin-1 long file}          ${CURDIR}${/}files${/}latin-1_multiple_rows.txt
${utf-8 long file}            ${CURDIR}${/}files${/}utf-8_multiple_rows.txt
${utf-16 LE file}             ${CURDIR}${/}files${/}utf-16LE.txt        # Little Endian
${utf-16 BE file}             ${CURDIR}${/}files${/}utf-16BE.txt        # Big Endian
${utf-16 LE with BOM file}    ${CURDIR}${/}files${/}utf-16LEBOM.txt     # Little Endian with Byte Order Marker
${utf-16 BE with BOM file}    ${CURDIR}${/}files${/}utf-16BEBOM.txt     # Big Endian with BOM

*** Test Cases ***
Get File
    Create File  ${TESTFILE}  hello world\nwith two lines
    ${file} =  Get File  ${TESTFILE}
    Should Be Equal  ${file}  hello world\nwith two lines
    ${file} =  Get File  ${TESTFILE}  ascii
    Should Be Equal  ${file}  hello world\nwith two lines

Get File With Non-ASCII Name
    Create File  ${NON ASCII}  content
    ${file} =  Get File  ${NON ASCII}
    Should Be Equal  ${file}  content

Get File With Space In Name
    Create File  ${WITH SPACE}  content
    ${file} =  Get File  ${WITH SPACE}
    Should Be Equal  ${file}  content

Get Binary File
    Create File  ${TESTFILE}  hello world\r\nbinary
    ${file}=  Get Binary File  ${TESTFILE}
    Should Be Equal  ${file}  hello world\r\nbinary

Log File
    Create File  ${TESTFILE}  hello world\nwith two lines
    ${file} =  Log File  ${TESTFILE}
    Should Be Equal  ${file}  hello world\nwith two lines

Get Utf-8 File
    ${file} =  Get File  ${utf-8file}
    Log Variables
    Log  ${file}
    Should Be Equal  ${file}  ${RESULT}

Get Ascii File With Default Encoding
    ${file} =  Get File  ${asciifile}
    Should Be Equal  ${file}  Hyvaa yota

Get Latin-1 With Default Encoding
    [Documentation]  FAIL REGEXP: (UnicodeDecodeError|UnicodeError): .*
    ${file} =  Get File  ${latin-1file}

Get Latin-1 With Latin-1 Encoding
    ${file} =  Get File  ${latin-1file}  Latin-1
    Should Be Equal  ${file}  ${result}

Get Utf-16 File with Default Encoding
    [Documentation]    FAIL REGEXP: (UnicodeDecodeError|UnicodeError): .*
    ${file}=    Get File    ${utf-16LEfile}

Get File with Default Encoding and error handlers
    :FOR    ${file}    ${handler}     ${expected}    IN
    ...     ${utf-16 BE file}    ignore     \x00H\x00y\x00v\x00\x00\x00 \x00\x00\x00t\x00\x00\n\x00f\x00\x00\x00 \x00b\x00a\x00r
    ...     ${latin-1file}       ignore     Hyv t
    ...     ${utf-16 BE file}    replace    \x00H\x00y\x00v\x00\ufffd\x00\ufffd\x00 \x00\ufffd\x00\ufffd\x00t\x00\ufffd\x00\n\x00f\x00\ufffd\x00\ufffd\x00 \x00b\x00a\x00r
    ...     ${latin-1file}       replace    Hyv�� ��t�
    \    Verify Get File with error handler    ${file}    ${handler}    ${expected}

Log Latin-1 With Latin-1 Encoding
    ${file} =  Log File  ${latin-1file}  Latin-1

Grep File
    [Template]    Grep And Check File
    ${EMPTY}    foo\nbar\nfoo bar\n\nA Foo
    foo         foo\nfoo bar
    foo?        foo bar
    ?foo        ${EMPTY}
    ?oo         foo\nfoo bar\nA Foo
    [Ff]oo      foo\nfoo bar\nA Foo
    f*a         foo bar
    ?           foo\nbar\nfoo bar\nA Foo
    ????        foo bar\nA Foo
    foo bar     foo bar

Grep File with empty file
    Create File  ${TESTFILE}  ${EMPTY}
    Grep And Check File  *  ${EMPTY}    ${TESTFILE}

Grep File non Ascii
    [Setup]    Create File    ${TESTFILE}    fää\nbär\nföö bär\n\nA Fåå
    [Template]    Grep And Check File
    fää     fää        ${TESTFILE}
    ö       föö bär    ${TESTFILE}
    A       A Fåå      ${TESTFILE}

Grep File with UTF-16 files
    [Template]    Verify Grep File With UTF-16 files
    ${utf-16 LE file}             UTF-16-LE    föö bar\nföö bar\nföö bar
    ${utf-16 BE file}             UTF-16-BE    föö bar
    ${utf-16 LE with BOM file}    UTF-16    föö bar\nföö bar\nföö bar\nföö bar
    ${utf-16 BE with BOM file}    UTF-16    föö bar\nföö bar

Grep File With Encoding Error Handlers
    [Template]    Verify Grep File with error handler
    ignore     f bar
    replace    f\ufffd\ufffd bar


*** Keywords ***
Get And Check File
    [Arguments]  ${path}  ${expected}
    ${content} =  Get File  ${path}
    Should Be Equal  ${content}  ${expected}

Grep And Check File
    [Arguments]  ${pattern}  ${expected}    ${test file}=${utf-8 long file}
    ${content} =  Grep File  ${test file}  ${pattern}
    Should Be Equal  ${content}  ${expected}

Verify Get File with error handler
    [Arguments]    ${file}    ${error handler}    ${expected}
    ${ret}=    Get File    ${file}    encoding_errors=${error handler}
    Should Be Equal    ${ret}    ${expected}

Verify Grep File with error handler
    [Arguments]    ${error handler}    ${expected}
    ${ret}=    Grep File    ${latin-1 long file}    f*a    encoding_errors=${error handler}
    Should Be Equal    ${ret}    ${expected}

Verify Grep File With UTF-16 files
    [Arguments]     ${file}     ${encoding}    ${expected}
    ${ret}=    Grep File     ${file}    f*a    ${encoding}
    Should Be Equal    ${ret}    ${expected}
