*** Settings ***
Suite Setup       Check Precondition    os.sep == "/" and sys.version_info >= (2,6)
Suite Teardown    Terminate All Processes
Resource          resource.txt

*** Test Cases ***
Sending INT signal
    Killer signal    INT

Sending SIGINT signal
    Killer signal    SIGINT

Sending INT signal as a text number
    Killer signal    2

Sending INT signal as a number
    Killer signal    ${2}

Send other well-known signals
    :FOR    ${signal}    IN    TERM    SIGTERM    15    KILL    SIGKILL    9
    \    Start Sleeping Process
    \    Send Signal To Process    ${signal}
    \    ${result} =    Wait For Process
    \    Should Not Be Equal    ${result.rc}    ${0}

Sending an unknown signal
    [Documentation]    FAIL Unsupported signal 'unknown'.
    Start Python Process    1+1
    Send Signal To Process    unknown

Sending signal to a process with a handle
    ${index} =    Start Sleeping Process
    Start Sleeping Process    alias=alias
    Send Signal To Process    INT    handle=${index}
    Send Signal To Process    INT    alias
    Sleeping Process Should Have Been Stopped    ${index}
    Sleeping Process Should Have Been Stopped    alias

Sending signal to a process with a wrong handle
    [Documentation]    FAIL Non-existing index or alias 'unknown'.
    Send Signal To Process    2    handle=unknown

*** Keywords ***
Killer signal
    [Arguments]    ${signal}
    Start Sleeping Process
    Send Signal To Process    ${signal}
    Sleeping Process Should Have Been Stopped

Start Sleeping Process
    [Arguments]    ${alias}=
    ${command} =    Catenate    SEPARATOR=\n
    ...    import time
    ...    print 'start'
    ...    for i in range(25): time.sleep(0.1)
    ...    print 'end'
    ${index} =    Start Python Process    ${command}    alias=${alias}
    Sleep    0.1s    Give process time to start
    [Return]    ${index}

Sleeping Process Should Have Been Stopped
    [Arguments]    ${handle}=
    ${result}=    Wait For Process    ${handle}
    Should Not Be Equal    ${result.rc}    ${0}
    Should Be Equal    ${result.stdout}    start    handle "${handle}"
