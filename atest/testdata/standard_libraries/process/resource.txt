*** Settings ***
Library           Process
Library           OperatingSystem

*** Variables ***
${STDOUT}         %{TEMPDIR}/process-stdout-file.txt
${STDERR}         %{TEMPDIR}/process-stderr-file.txt
${CWD}            %{TEMPDIR}/process-cwd

*** Keywords ***
Some process
    [Arguments]    ${alias}=${null}
    ${handle}=    Start Python Process    raw_input()    alias=${alias}
    Process should be running
    [Return]    ${handle}

Stop some process
    [Arguments]    ${alias}=${null}
    ${running}=    Is Process Running    ${alias}
    Return From Keyword If    not ${running}
    ${process}=    Get Process Object    ${alias}
    Call Method    ${process}    communicate    stop\n

Result should equal
    [Arguments]    ${result}    ${stdout}=    ${stderr}=    ${rc}=0
    ...    ${stdout_path}=    ${stderr_path}=
    Should Be Equal    ${result.stdout}    ${stdout}    stdout:
    Should Be Equal    ${result.stderr}    ${stderr}    stderr
    Result should match    ${result}    *    *    ${rc}    ${stdout_path}    ${stderr_path}

Result should match
    [Arguments]    ${result}    ${stdout}=    ${stderr}=    ${rc}=0
    ...    ${stdout_path}=    ${stderr_path}=
    Should Match    ${result.stdout}    ${stdout}    stdout
    Should Match    ${result.stderr}    ${stderr}    stderr
    Should Be Equal As Integers    ${result.rc}    ${rc}    rc
    ${stdout_path} =    Run Keyword If    "${stdout_path}"
    ...    Normalize Path    ${stdout_path}
    ${stderr_path} =    Run Keyword If    "${stderr_path}"
    ...    Normalize Path    ${stderr_path}
    Should Be Equal    ${result.stdout_path}    ${stdout_path}    stdout_path
    Should Be Equal    ${result.stderr_path}    ${stderr_path}    stderr_path

Start Python Process
    [Arguments]    ${command}    ${alias}=${NONE}    ${stdout}=${NONE}    ${stderr}=${NONE}
    ${handle}=    Start Process    python    -c    ${command}
    ...    alias=${alias}    stdout=${stdout}    stderr=${stderr}
    [Return]    ${handle}

Run Python Process
    [Arguments]    ${command}    ${alias}=${NONE}    ${stdout}=${NONE}    ${stderr}=${NONE}
    ${result}=    Run Process    python    -c    ${command}
    ...    alias=${alias}    stdout=${stdout}    stderr=${stderr}
    [Return]    ${result}

Safe Remove File
    [Documentation]    Ignore errors caused by process being locked.
    ...                That happens at least with IronPython.
    [Arguments]    @{paths}
    Run Keyword And Ignore Error    Remove Files    @{paths}

Safe Remove Directory
    [Arguments]    ${path}
    Run Keyword And Ignore Error    Remove Directory    ${path}    recursive=yep

Check Precondition
    [Arguments]    ${precondition}
    ${ok} =    Evaluate    ${precondition}    modules=sys,os
    Run Keyword If    not ${ok}
    ...    Fail    Precondition '${precondition}' was not true.    precondition-fail
